
def app_dir = 'spring-boot-hello-world'

pipeline {
    agent {
        docker {
            image 'my-java-image:latest'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from the Git repository
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], 
                doGenerateSubmoduleConfigurations: false, 
                extensions: [[$class: 'CleanBeforeCheckout'], [$class: 'CloneOption', 
                noTags: false, reference: '', shallow: true, timeout: 10]], 
                submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'your-credentials-id', 
                url: 'https://github.com/wendytallytlhgithub932/TestSpringBoot.git']]])
                
                sh 'pwd'
                sh 'ls -lrt'
            }
        }

        stage('Build') {
            steps {
                sh '\'pwd\''
                dir('spring-boot-hello-world') {
                    // Perform actions in the specified directory
                    sh 'ls -l' // Example: List files in the specified directory
                   // sh 'mvn clean install -Dmaven.test.skip=true'
                    sh 'mkdir target'
                    sh 'touch target/test.jar'
                }
 
            }
        }

       stage('Push JAR to Git Repository') {
            steps {
                // Replace with your Git repository URL and branch
                def gitRepoUrl = 'https://github.com/wendytallytlhgithub932/TestSpringBoot.git'
                def gitBranch = 'main'
                def gitFilePath = '/'

                // Define the JAR file name (adjust as needed)
                def jarFileName = 'target/*.jar'
				dir("$app_dir")
				{

                // Commit and push the JAR file to the Git repository
					sh """
						git config --global user.email "test@xyz.com"
						git config --global user.name "Wendy"
						git clone $gitRepoUrl
						cd $app_dir
						git checkout $gitBranch
						cp $destinationPath/$jarFileName $gitFilePath
						git add $gitFilePath/$jarFileName
						git commit -m "Add $jarFileName"
						git push origin $gitBranch
					"""
				}
            }
        }        // Add more stages as needed (e.g., testing, deployment)
    }
}


